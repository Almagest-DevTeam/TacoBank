# 1. NGINX가 사용할 프로세스 개수 설정 (자동 조정).
worker_processes auto;

# 2. 이벤트 처리 설정 (최대 1024개의 연결을 지원).
events {
    worker_connections 1024;
}

http {

    log_format main '$remote_addr - $remote_user [$time_local] '
                         '"$request" $status $body_bytes_sent '
                         '"$http_referer" "$http_user_agent"';
    access_log /var/log/nginx/access.log main;

    # --------- 서버 그룹 설정 (업스트림) ---------
    upstream auth_server {
        server auth_server:8080;  # 인증 서버 컨테이너 이름 사용
    }

    upstream business_server {
        server business_server:8081;  # 비즈니스 서버 컨테이너 이름 사용
    }

    upstream ai_server {
        server ai_server:8082;  # AI 서버 컨테이너 이름 사용
    }

    upstream email_server {
            server email_server:8083;  # Email 서버 컨테이너 이름 사용
    }

    # --------- NGINX가 수신할 요청에 대한 서버 설정 ---------
    server {
        listen 80;  # NGINX가 수신할 포트 설정
        server_name localhost;

        # --------- /auth/ 경로 (인증 서버로 프록시) ---------
        location /auth/ {
                    # Preflight(OPTIONS) 요청 처리
                    if ($request_method = OPTIONS) {
                        add_header Access-Control-Allow-Origin "http://localhost:5173";
                        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                        add_header Access-Control-Allow-Headers "Authorization, Content-Type, x-api-key";
                        add_header Access-Control-Allow-Credentials true;
                        add_header Content-Length 0;
                        add_header Content-Type text/plain;
                        return 204;
                    }

                    # 백엔드로 프록시 전달
                    proxy_pass http://auth_server;
                    proxy_set_header Host $host;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

                    # 백엔드 응답의 CORS 헤더를 강제로 설정
                    proxy_hide_header Access-Control-Allow-Origin;
                    add_header Access-Control-Allow-Origin "http://localhost:5173" always;
                    add_header Access-Control-Allow-Credentials true;
                    proxy_redirect off;
        }

        # --------- /business/ 경로 (비즈니스 서버로 프록시) ---------
        location /business/ {
                            # Preflight(OPTIONS) 요청 처리
                            if ($request_method = OPTIONS) {
                                add_header Access-Control-Allow-Origin "http://localhost:5173";
                                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                                add_header Access-Control-Allow-Headers "Authorization, Content-Type, x-api-key";
                                add_header Access-Control-Allow-Credentials true;
                                add_header Content-Length 0;
                                add_header Content-Type text/plain;
                                return 204;
                            }

                            # 백엔드로 프록시 전달
                            proxy_pass http://business_server;
                            proxy_set_header Host $host;
                            proxy_set_header X-Real-IP $remote_addr;
                            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

                            # 백엔드 응답의 CORS 헤더를 강제로 설정
                            proxy_hide_header Access-Control-Allow-Origin;
                            add_header Access-Control-Allow-Origin "http://localhost:5173" always;
                            add_header Access-Control-Allow-Credentials true;
                            proxy_redirect off;
        }

        # --------- /email/ 경로 (비즈니스 서버로 프록시) ---------
        location /email/ {
                                    # Preflight(OPTIONS) 요청 처리
                                    if ($request_method = OPTIONS) {
                                        add_header Access-Control-Allow-Origin "http://localhost:5173";
                                        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                                        add_header Access-Control-Allow-Headers "Authorization, Content-Type, x-api-key";
                                        add_header Access-Control-Allow-Credentials true;
                                        add_header Content-Length 0;
                                        add_header Content-Type text/plain;
                                        return 204;
                                    }

                                    # 백엔드로 프록시 전달
                                    proxy_pass http://email_server;
                                    proxy_set_header Host $host;
                                    proxy_set_header X-Real-IP $remote_addr;
                                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

                                    # 백엔드 응답의 CORS 헤더를 강제로 설정
                                    proxy_hide_header Access-Control-Allow-Origin;
                                    add_header Access-Control-Allow-Origin "http://localhost:5173" always;
                                    add_header Access-Control-Allow-Credentials true;
                                    proxy_redirect off;
        }

        # --------- /ai/ 경로 (AI 서버로 프록시) ---------
        location /ai/ {
                            # Preflight(OPTIONS) 요청 처리
                            if ($request_method = OPTIONS) {
                                add_header Access-Control-Allow-Origin "http://localhost:5173";
                                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                                add_header Access-Control-Allow-Headers "Authorization, Content-Type, x-api-key";
                                add_header Access-Control-Allow-Credentials true;
                                add_header Content-Length 0;
                                add_header Content-Type text/plain;
                                return 204;
                            }

                            # 백엔드로 프록시 전달
                            proxy_pass http://ai_server;
                            proxy_set_header Host $host;
                            proxy_set_header X-Real-IP $remote_addr;
                            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

                            # 백엔드 응답의 CORS 헤더를 강제로 설정
                            proxy_hide_header Access-Control-Allow-Origin;
                            add_header Access-Control-Allow-Origin "http://localhost:5173" always;
                            add_header Access-Control-Allow-Credentials true;
                            proxy_redirect off;
        }

    }
}
